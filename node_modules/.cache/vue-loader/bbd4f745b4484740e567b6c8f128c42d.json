{"remainingRequest":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/src/views/curso/Tema3.vue?vue&type=template&id=74f7cbc9&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/src/views/curso/Tema3.vue","mtime":1736830646639},{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_Publicidad/U3_Fundamentos_Publicidad/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}